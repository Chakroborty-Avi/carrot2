Release steps
-------------

* Check if the documentation contains version the soon-to-be-published
  entry and if it's complete.

* Check if all the issues are resolved

https://github.com/carrot2/carrot2/issues

* Bump version number to a non-snapshot version ([versions] -> carrot2)

vi gradle/libs.versions.toml

commit changes.

git commit -am "Bumping version."
git push

* Build and check the entire distribution. Or wait for the GH action(s) to pass

gradlew clean assemble check

* Go to github prepare-release workflow:

https://github.com/carrot2/carrot2/actions/workflows/prepare-release.yml

click on "Run workflow" and pick the desired branch to release from (and tag to annotate
the release with).

* Review the created release content.

* Publish static documentation using this workflow:

https://github.com/carrot2/carrot2/actions/workflows/publish-release.yml

* Redeploy public DCS demo frontend. Go to the build plan, locate build for 
this version, create a new deployment and promote to production server.

https://github.com/carrotsearch/infra/actions/workflows/publish-carrot2-dcs-demo.yml

NOTE: the staging environment requires the vps node to be (manually) started at ramnode.

* Publish to sonatype staging repo.

./gradlew publishSonatype --max-workers=1
./gradlew promoteToMavenCentral

* Go to maven central publisher, verify the release is published (~10 mins).

https://central.sonatype.com/publishing/deployments

* Bump version number strings to the subsequent version, commit.

* Circulate release news

  - Wikipedia page. https://en.wikipedia.org/wiki/Carrot2

* Consider upgrading &C2; in dependent projects
