plugins {
  id 'base'

  alias(libs.plugins.buildinfra)
  alias(libs.plugins.node.gradle) apply false
}

repositories {
  mavenLocal()
  mavenCentral()
}

rootProject.version = libs.versions.carrot2.get()
ext {
  fullName = "Carrot2"

  licenseHeader = file("etc/spotless/license-header.txt")
  legal = files('carrot2.LICENSE')

  forbiddenApiRulesDir = file("etc/forbidden-apis")

  langResourcePatterns = [
    '**/*.label-filters.json',
    '**/*.word-filters.json',
  ]

  devMode = {

    ->
    if (rootProject.hasProperty('dev')) {
      return (rootProject.dev == '' || Boolean.parseBoolean(rootProject.dev))
    } else {
      return false
    }
  }.call()
}

// apply from: file('gradle/dependencies.gradle')
apply from: file('gradle/defaults.gradle')
apply from: file('gradle/cleanall.gradle')
apply from: file('gradle/gitinfo.gradle')
apply from: file('gradle/buildinfo.gradle')
apply from: file('gradle/defaults-java.gradle')

apply from: file('gradle/node/yarn-projects.gradle')

apply from: file('gradle/ide/idea.gradle')
apply from: file("gradle/validation/spotless.gradle")

apply from: file("gradle/testing/defaults-tests.gradle")
apply from: file("gradle/testing/per-project-summary.gradle")
apply from: file("gradle/testing/slowest-tests-at-end.gradle")

apply from: file('gradle/maven/defaults-maven.gradle')

subprojects {
  if (project.file("src/main/java").exists() ||
      project.file("src/test/java").exists() ||
      project.file("src/main/webapp").exists()) {
    apply plugin: 'java-library'

    if (![":core-examples"].contains(project.path)) {
      dependencies {
        testImplementation project(':infra:tests')
      }
    }
  }
}

allprojects { prj ->
  plugins.withType(WarPlugin) {
    configurations {
      war {}
    }

    artifacts {
      war tasks.war
    }

    dependencies {
      providedCompile libs.jetty.toolchain.servlet.api
    }
  }
}
