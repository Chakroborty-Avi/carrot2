
import org.apache.tools.ant.filters.*

apply plugin: 'java-library'

dependencies {
  implementation project(':core')
  testImplementation project(':lang:polish')
  testImplementation project(':lang:lucene')
  testImplementation libs.lucene.analysis.icu
  testImplementation libs.junit
}

configurations {
  distribution
}

def buildDistribution = tasks.register("buildDistribution", Sync, {
  dependsOn configurations.testRuntimeClasspath

  def antPrj = new org.apache.tools.ant.Project()

  inputs.properties replaceTokensTrigger

  doFirst {
    replaceTokens.each { k, v -> antPrj.setProperty(k.toString(), v.toString()) }
    antPrj.setProperty("version.lucene-analysis-icu", getResolvedVersion(
        libs.lucene.analysis.icu.get(),
        configurations.testRuntimeClasspath
        ))
    antPrj.setProperty("version.junit", getResolvedVersion(
        libs.junit.get(),
        configurations.testRuntimeClasspath
        ))
  }

  from(project.projectDir, {
    include 'src/**'
    exclude 'src/main/assembly/**'
    includeEmptyDirs = false
    filteringCharset = 'UTF-8'
    filter(LineContains, negate: true, contains: ['fragment-start{'])
    filter(LineContains, negate: true, contains: ['fragment-end{'])
  })

  from(files("src/main/assembly"), {
    filteringCharset = 'UTF-8'
    filter(ExpandProperties, project: antPrj)
  })

  from(rootProject.projectDir, {
    include "gradlew*", "gradle/wrapper/**"
  })

  into "$buildDir/distribution"
})

artifacts {
  distribution file("$buildDir/distribution"), {
    builtBy buildDistribution
  }
}
